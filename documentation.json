{
    "pipes": [],
    "interfaces": [
        {
            "name": "ItemState",
            "id": "interface-ItemState-7c5d80ec837b3c0772d37e4e58c9b52e60b7f1e6cbe142565ed689acce9b88646b327ace6161a4c7c1d37e07881a7ffe5e89e2ea2ce27ab338a1e2b909b03e78",
            "file": "src/app/state/Items/item.reducer.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Item } from 'types/Item';\r\n\r\nexport interface ItemState {\r\n  items: Item[];\r\n  problems: Item[];\r\n  infos: Item[];\r\n  concerns: Item[];\r\n  solutions: Item[];\r\n}\r\n",
            "properties": [
                {
                    "name": "concerns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Item[]",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "infos",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Item[]",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Item[]",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "problems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Item[]",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "solutions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Item[]",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "User",
            "id": "interface-User-9c7e5f1bbbab702cb032307d130876cb68969b0cd4eedef32a0c8cad8081a54e5f8f577ed6ad4539c1b99a1d246cb34031d198c2ea8eba440e64e91b14f01fdc",
            "file": "src/stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "AuthenticationService",
            "id": "injectable-AuthenticationService-1cb59dbee81b9e4086ef3ab8829783c8a292b4238ef74bd63990fcad05f20f86241b19061bc6c9c3a1ee8a9ec426768a2a72b278a139ff2401b0c24c4a970967",
            "file": "src/app/service/authentication/authentication.service.ts",
            "properties": [
                {
                    "name": "isAuthenticated",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "mockedUser",
                    "defaultValue": "new SignInData('MaxMuster', 'test123')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        121,
                        144
                    ]
                }
            ],
            "methods": [
                {
                    "name": "Authenticate",
                    "args": [
                        {
                            "name": "signInData",
                            "type": "SignInData",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "signInData",
                            "type": "SignInData",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "CheckCredentials",
                    "args": [
                        {
                            "name": "signInData",
                            "type": "SignInData",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "signInData",
                            "type": "SignInData",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { faLeaf } from '@fortawesome/free-solid-svg-icons';\nimport { SignInData } from 'app/components/signInData';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthenticationService {\n  private readonly mockedUser = new SignInData('MaxMuster', 'test123');\n  isAuthenticated = false;\n\n  constructor() {}\n\n  Authenticate(signInData: SignInData): boolean {\n    if (this.CheckCredentials(signInData)) {\n      this.isAuthenticated = true;\n      return true;\n    }\n    this.isAuthenticated = false;\n    return false;\n  }\n\n  private CheckCredentials(signInData: SignInData): boolean {\n    return (\n      signInData.getEmail() == this.mockedUser.getEmail() &&\n      signInData.getPassword() == this.mockedUser.getPassword()\n    );\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "type": "injectable"
        },
        {
            "name": "CounterService",
            "id": "injectable-CounterService-7cbcef43d99a7345af8fd9da3f8f9952b195cfedc0375b8b2ab0b3486023b245ce7d29aa4f1f2941ef023f7a60ef795207d678180d5a76271131023ba92a9c28",
            "file": "src/app/state/counter/counter.service.ts",
            "properties": [
                {
                    "name": "counter",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "decrease",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getValue",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "increase",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 7,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class CounterService {\r\n  public counter = 1;\r\n\r\n  public increase() {\r\n    this.counter++;\r\n  }\r\n\r\n  public decrease() {\r\n    this.counter--;\r\n  }\r\n\r\n  public getValue(): number {\r\n    return this.counter;\r\n  }\r\n}\r\n",
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "Item",
            "id": "class-Item-afb0d2a4f916379c60d6d592426df9bf12f7bee569632e876c3800f4e0e2c05bcf13bdc8ab882d0e45ef2f9872b4ad120f3bc7785332c20e6c38e0c0293dcbdd",
            "file": "src/types/Item.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "enum chartCaption {\r\n  p,\r\n  i,\r\n  b,\r\n  l,\r\n}\r\n\r\nexport class Item {\r\n  number: number;\r\n  description: string;\r\n  color: string;\r\n  type: chartCaption;\r\n  bookmark: boolean = false;\r\n  ofCourse: boolean = false;\r\n}\r\n",
            "properties": [
                {
                    "name": "bookmark",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "number",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "ofCourse",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "chartCaption",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "SignInData",
            "id": "class-SignInData-61dffae75f7992a88fad40c7fe3f258da5cc93206bf4797facc4af35e8053c8ab6cd8c504a812657a9a7c7e8c0e9b80f9d356d6384f09c091648c0e955384745",
            "file": "src/app/components/signInData.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class SignInData {\r\n  private email: string;\r\n  private password: string;\r\n\r\n  constructor(email: string, password: string) {\r\n    this.email = email;\r\n    this.password = password;\r\n  }\r\n\r\n  getEmail(): string {\r\n    return this.email;\r\n  }\r\n\r\n  getPassword(): string {\r\n    return this.password;\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "email",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "password",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 3,
                "jsdoctags": [
                    {
                        "name": "email",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "password",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getEmail",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getPassword",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AddButtonComponent",
            "id": "component-AddButtonComponent-4acdf9f08cb8dfd03319b546d556d604adf8a30c2e7de1fdd4be4d20d234740e1ae9cd80051d33a0aff070213b1b207a1fede9881317e825afc5971e708423aa",
            "file": "src/app/components/add-button/add-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-add-button",
            "styleUrls": [
                "./add-button.component.scss"
            ],
            "styles": [],
            "template": "<button type=\"button\" [ngClass]=\"classes\">+</button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "flipchart",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-add-button',\n  template: ` <button type=\"button\" [ngClass]=\"classes\">+</button>`,\n  styleUrls: ['./add-button.component.scss'],\n})\nexport class AddButtonComponent {\n  @Input()\n  flipchart = true;\n\n  public get classes(): string[] {\n    const mode = this.flipchart\n      ? 'add-button__flipchart'\n      : 'add-button__issues';\n\n    return ['add-button', mode];\n  }\n\n  /*onClick() {\n    if (this.flipchart) {\n    } else {\n    }\n  }*/\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use \"styles/colors\" as c;\r\n\r\n.add-button {\r\n  border: none;\r\n  border-radius: 100%;\r\n  color: c.$turquoise;\r\n  height: 35px;\r\n  width: 35px;\r\n  font-size: 30px;\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n\r\n  &__flipchart {\r\n    background-color: c.$item-background;\r\n  }\r\n  &__issues {\r\n    background-color: white;\r\n    box-shadow: 0px 4px 15px rgba(0, 0, 0, 0.1);\r\n  }\r\n}\r\n",
                    "styleUrl": "./add-button.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 12
                    }
                }
            }
        },
        {
            "name": "AddedItemComponent",
            "id": "component-AddedItemComponent-9cec7cb8f73ccbdbaf8b41b0511efdaf3a23aa1b6c7dc77b579b7e0b3c4177671d9a5da26d3d6499ad4a87b2628a276516b19b50448122f6993cb69b69fa6a39",
            "file": "src/app/components/added-item/added-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-added-item",
            "styleUrls": [
                "./added-item.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./added-item.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "newItem",
                    "defaultValue": "new Item()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "Item",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "color",
                    "defaultValue": "this.newItem.color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "shiftColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLDivElement>",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'coloredStripe'"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { style } from '@angular/animations';\nimport { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { Item } from 'types/Item';\n\n@Component({\n  selector: 'app-added-item',\n  templateUrl: './added-item.component.html',\n  styleUrls: ['./added-item.component.scss'],\n})\nexport class AddedItemComponent implements OnInit {\n  @Input() newItem: Item = new Item();\n  @ViewChild('coloredStripe') shiftColor: ElementRef<HTMLDivElement>;\n\n  color: string = this.newItem.color;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  ngAfterViewInit() {\n    this.shiftColor.nativeElement.style.setProperty(\n      '$color',\n      this.newItem.color.toString()\n    );\n    console.log(this.newItem.color);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use \"styles/colors\" as c;\r\n\r\n:root {\r\n  $color: \"shift-blue\";\r\n}\r\n\r\n.item-box {\r\n  background-color: c.$item-background;\r\n  width: 100%;\r\n  border-radius: 0px 16px 16px 0px;\r\n  padding: 15px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  font-weight: 300;\r\n  font-size: 20px;\r\n  line-height: 24px;\r\n  font-family: \"Serenity\", sans-serif;\r\n}\r\n\r\n.item-box:active {\r\n  box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2),\r\n    0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12);\r\n}\r\n\r\n.shift-color {\r\n  //background-color: map-get(c.$shift-colors, $color);\r\n  height: auto;\r\n  width: 10px;\r\n  align-items: flex-start;\r\n  margin-top: -15px;\r\n  margin-bottom: -15px;\r\n  margin-left: -15px;\r\n  margin-right: 10px;\r\n}\r\n\r\n.right-wrapper {\r\n  width: 100%;\r\n  padding-top: 10px;\r\n}\r\n\r\n.counting-label {\r\n  float: left;\r\n  margin-right: 5px;\r\n  height: 100%;\r\n}\r\n\r\n.icon-wrapper {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.item-text {\r\n  width: 100%;\r\n}\r\n\r\n.menu {\r\n  border: none;\r\n  background-color: transparent;\r\n}\r\n\r\n.shift-turquoise {\r\n  background-color: map-get(c.$shift-colors, shift-turquoise);\r\n}\r\n\r\n.shift-blue {\r\n  background-color: map-get(c.$shift-colors, shift-blue);\r\n}\r\n\r\n.shift-yellow {\r\n  background-color: map-get(c.$shift-colors, shift-yellow);\r\n}\r\n\r\n.shift-orange {\r\n  background-color: map-get(c.$shift-colors, shift-orange);\r\n}\r\n",
                    "styleUrl": "./added-item.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 14
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"item-box\" cdkDrag>\n  <div #coloredStripe [ngClass]=\"newItem.color\" class=\"shift-color\"></div>\n\n  <div class=\"right-wrapper\">\n    <div class=\"counting-label\">{{ newItem.number }}.</div>\n    <div class=\"item-text\">\n      {{ newItem.description }}\n    </div>\n    <div class=\"icon-wrapper\"><button class=\"menu\">dot</button></div>\n  </div>\n</div>\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-452a29d070b7f0ac6cfb4a030f6762883b679fbcb49164b512e14caaebdcc0987efdbcce598d2e0ccfa90ea5657e67e3e328e028688e26dbfd75c73ac5a4a7de",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "authenticationService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AuthenticationService",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "count",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isFlipchartview",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "title",
                    "defaultValue": "'Dynamic-Facilitation'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onActivate",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FlipchartsComponent } from './pages/flipcharts'; //!!\nimport { AuthenticationService } from './service/authentication/authentication.service';\nimport { CounterService } from './state/counter/counter.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  title = 'Dynamic-Facilitation';\n  public count: number;\n\n  constructor(\n    public authenticationService: AuthenticationService,\n    private _counterService: CounterService\n  ) {}\n\n  ngOnInit() {\n    this.count = this._counterService.getValue();\n  }\n\n  isFlipchartview: boolean = false;\n\n  onActivate(e: any) {\n    this.isFlipchartview = e instanceof FlipchartsComponent;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use \"../styles/_colors.scss\" as c;\r\n@import url(\"https://use.typekit.net/owv7fhz.css\");\r\n//@use \"../node_modules/bootstrap/scss/bootstrap.scss\" as b;\r\n\r\nbody {\r\n  background-color: c.$main-background;\r\n  font-family: \"Serenity\";\r\n  color: c.$dark-grey;\r\n}\r\n\r\ndiv {\r\n  background-color: c.$main-background;\r\n  font-family: \"Serenity\";\r\n  color: c.$dark-grey;\r\n}\r\n\r\n$body-bg: c.$main-background;\r\n",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authenticationService",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_counterService",
                        "type": "CounterService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "authenticationService",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_counterService",
                        "type": "CounterService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div>\n  <app-header [flipchart]=\"isFlipchartview\"></app-header>\n  <router-outlet (activate)=\"onActivate($event)\"></router-outlet>\n\n  <p *ngIf=\"authenticationService.isAuthenticated\">hallo</p>\n</div>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-a8ebc47a9477da3e9696803fdc882c86297d2c2eb086c1248c2711334a534f9a03b1d473f8df2e1b2a1405d195bac2eb99f66386d49368c0179c70e8e9215e9f",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 711,
                            "end": 724,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 712,
                                "end": 720,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary\n      ? 'storybook-button--primary'\n      : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "ChartComponent",
            "id": "component-ChartComponent-cdb857c09903c5b3c1d19e52f67e74f937275be1a80b2dfeeb4bfd325f24cd5a9668bca479f3a936efd479756116e7ece9b8cc9deb75b72a2441a263c79fabd1",
            "file": "src/app/components/chart/chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-chart",
            "styleUrls": [
                "./chart.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./chart.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_counterService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CounterService",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "addingItem",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Item[]",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "cancelSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "itemSubmit",
                    "args": [
                        {
                            "name": "item",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ToggleInput",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport {\n  CdkDragDrop,\n  moveItemInArray,\n  transferArrayItem,\n} from '@angular/cdk/drag-drop';\nimport { Item } from 'types/Item';\nimport { CounterService } from '../../state/counter/counter.service';\n\n@Component({\n  selector: 'app-chart',\n  templateUrl: './chart.component.html',\n  styleUrls: ['./chart.component.scss'],\n})\nexport class ChartComponent implements OnInit {\n  constructor(public _counterService: CounterService) {}\n  addingItem: boolean = false;\n\n  items: Item[] = [];\n\n  @Input()\n  title: string = '';\n\n  ToggleInput() {\n    this.addingItem = !this.addingItem;\n  }\n\n  ngOnInit() {}\n\n  cancelSubmit() {\n    this.addingItem = false;\n  }\n\n  itemSubmit(item: { description: string; color: string }) {\n    let newItem = new Item();\n    this.addingItem = false;\n    newItem.number = this._counterService.getValue();\n    newItem.description = item.description;\n    newItem.color = item.color;\n\n    this.items.push(newItem);\n\n    //console.log(this.counterService.getValue());\n    console.log(item);\n    console.log(newItem);\n    console.log(this.items);\n    //this.newItem.type =\n\n    this._counterService.increase();\n  }\n\n  /*drop(event: CdkDragDrop<string[]>) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex\n      );\n    } else {\n      transferArrayItem(\n        event.previousContainer.data,\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex\n      );\n    }\n\n    console.log(this.addingItem);\n  }*/\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".charts {\r\n  background-color: #fff;\r\n  height: (100vh-15vh);\r\n  border-radius: 15px;\r\n  padding: 20px 10px;\r\n  gap: 5px;\r\n\r\n  &__add-button {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-end;\r\n  }\r\n\r\n  &__dropList {\r\n    position: relative;\r\n    margin-top: 15px;\r\n    height: auto;\r\n    display: flex;\r\n    flex-direction: column-reverse;\r\n    gap: 5px;\r\n  }\r\n}\r\n\r\np {\r\n  font-size: 30px;\r\n  font-weight: 700;\r\n  line-height: 36px;\r\n}\r\n",
                    "styleUrl": "./chart.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_counterService",
                        "type": "CounterService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "_counterService",
                        "type": "CounterService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"charts\">\n  <p>{{ title }}</p>\n  <app-add-button\n    [flipchart]=\"true\"\n    class=\"charts__add-button\"\n    *ngIf=\"!addingItem\"\n    (click)=\"ToggleInput()\"\n  ></app-add-button>\n  <app-item-flipchart\n    *ngIf=\"addingItem\"\n    (submitCanceled)=\"cancelSubmit()\"\n    (submitItem)=\"itemSubmit($event)\"\n    [counter]=\"_counterService.getValue()\"\n  ></app-item-flipchart>\n  <div class=\"charts__dropList\" cdkDropList>\n    <app-added-item\n      *ngFor=\"let item of items\"\n      [newItem]=\"item\"\n    ></app-added-item>\n  </div>\n</div>\n"
        },
        {
            "name": "FlipchartsComponent",
            "id": "component-FlipchartsComponent-389c4f8a709dd9c46718566a7299bc8ef5e722c32cdecc1b9a1d0e28786a5b6d985a50308b10662cb2ce6772abb0590938a09fe78a87c8c9ebb304cb8bbedc86",
            "file": "src/app/pages/flipcharts/flipcharts.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-flipcharts",
            "styleUrls": [
                "./flipcharts.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./flipcharts.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "addingItem",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "info_data",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "problem",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "solutions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "thoughts",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ToggleInput",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-flipcharts',\n  templateUrl: './flipcharts.component.html',\n  styleUrls: ['./flipcharts.component.scss'],\n})\nexport class FlipchartsComponent implements OnInit {\n  problem: any[] = [];\n  info_data: any[] = [];\n  thoughts: any[] = [];\n  solutions: any[] = [];\n\n  addingItem: boolean = false;\n\n  constructor() {}\n\n  ToggleInput() {\n    this.addingItem = !this.addingItem;\n  }\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use \"styles/colors\" as c;\r\n\r\nbody {\r\n  background-color: c.$main-background;\r\n}\r\n\r\n.chartview {\r\n  display: flex;\r\n  flex-direction: row;\r\n  padding: 2% 2% 0% 2%;\r\n\r\n  &__charts {\r\n    width: 100%;\r\n    margin: 10px;\r\n  }\r\n\r\n  &__openCharts {\r\n    background-color: #fff;\r\n    height: (100vh-15vh);\r\n    border-radius: 15px;\r\n    padding: 20px 10px;\r\n    gap: 5px;\r\n  }\r\n}\r\n\r\n.wrapper {\r\n  height: (100vh-15vh);\r\n}\r\n\r\np {\r\n  font-size: 30px;\r\n  font-weight: 700;\r\n  line-height: 36px;\r\n}\r\n",
                    "styleUrl": "./flipcharts.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 14
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"wrapper\">\n  <div cdkDropListGroup class=\"chartview\">\n    <app-chart class=\"chartview__charts\" title=\"Problemstellung\"></app-chart>\n    <app-chart\n      class=\"chartview__charts\"\n      title=\"Info, Data, Sichtweisen\"\n    ></app-chart>\n    <app-chart class=\"chartview__charts\" title=\"Bedenken\"></app-chart>\n    <app-chart class=\"chartview__charts\" title=\"Lösungen\"></app-chart>\n\n    <div class=\"chartview__openCharts chartview__charts\">\n      <p>OfCourses</p>\n    </div>\n\n    <div class=\"chartview__openCharts chartview__charts\">\n      <p>Bookmarks</p>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-a557eec14f72c438a8033301f4d6ce023e0a1844a3b06ec2b38794a612acc31735ae78a5ee10071b230c8c20d699eb914554e69d07ade54adb371da8efb464cc",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n\n.welcome {\n  color: #333;\n  font-size: 14px;\n  margin-right: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-f23280361fb8e71e7ee0ffbabaddde103194cbf0254c048c2263ba5d65904affaed43306d87e684b115403bbf0d909bdfd9b025f566c532589d5052ef0a7f735-1",
            "file": "src/app/components/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header",
            "styleUrls": [
                "./header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "flipchart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean | undefined",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "goToHomeview",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from 'app/service/authentication/authentication.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent {\n  constructor(private router: Router) {}\n\n  goToHomeview() {\n    this.router.navigate(['/home']);\n  }\n\n  @Input() flipchart: boolean | undefined;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use \"styles/colors\" as c;\r\n.header {\r\n  background-color: c.$header-background;\r\n  color: c.$dark-grey;\r\n  padding-left: 1%;\r\n  height: 60px;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n\r\n  &__title {\r\n    height: 100%;\r\n    width: 306px;\r\n    border: none;\r\n    color: c.$dark-grey;\r\n    background-color: c.$main-background;\r\n    font-style: normal;\r\n    font-weight: 600;\r\n    font-size: 26px;\r\n    line-height: 31px;\r\n    margin: 0 2%;\r\n  }\r\n\r\n  &__right {\r\n    display: flex;\r\n    flex-direction: row;\r\n    width: 100%;\r\n    justify-content: flex-end;\r\n    align-items: center;\r\n    margin: 0.6%;\r\n  }\r\n\r\n  &__left {\r\n    display: flex;\r\n    width: 100%;\r\n    flex-direction: row;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n  }\r\n  &__transparentButton {\r\n    border: none;\r\n    background-color: transparent;\r\n    margin-right: 1%;\r\n  }\r\n  &__dots {\r\n    width: 10.5px;\r\n    height: 10.5px;\r\n    margin: 1px;\r\n  }\r\n  &__icons {\r\n    height: 31px;\r\n    width: 32.09px;\r\n    color: c.$dark-grey;\r\n  }\r\n  &__logo {\r\n    width: 75px;\r\n    height: 50px;\r\n    margin: 7px;\r\n  }\r\n}\r\n",
                    "styleUrl": "./header.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "HeaderComponent-1",
            "templateData": "<div class=\"header\">\n  <div class=\"header__left\">\n    <a (click)=\"goToHomeview()\"\n      ><img class=\"header__logo\" src=\"assets/images/DFLogo.png\"\n    /></a>\n    <button *ngIf=\"flipchart\" class=\"header__title\">\n      Titel des Meetings >\n    </button>\n    <button *ngIf=\"flipchart\" class=\"header__transparentButton\">\n      <img class=\"header__icons\" src=\"assets/icons/floppy-disk-solid.svg\" />\n    </button>\n  </div>\n  <div class=\"header__right\">\n    <button *ngIf=\"flipchart\" class=\"header__transparentButton\">\n      <img class=\"header__icons\" src=\"assets/icons/star-solid.svg\" />\n    </button>\n    <button *ngIf=\"flipchart\" class=\"header__transparentButton\">\n      <img class=\"header__icons\" src=\"assets/icons/bookmark-solid.svg\" />\n    </button>\n    <button class=\"header__transparentButton\">\n      <img class=\"header__dots\" src=\"assets/icons/circle-solid.svg\" />\n      <img class=\"header__dots\" src=\"assets/icons/circle-solid.svg\" />\n      <img class=\"header__dots\" src=\"assets/icons/circle-solid.svg\" />\n    </button>\n  </div>\n</div>\n"
        },
        {
            "name": "HomeviewComponent",
            "id": "component-HomeviewComponent-2829bd7b6ed146de8cc69806b06708a26abb9fe15817f19bd3af5f63f7a65b7a37e50f4d9c89a5b436fd9aa282393e56ccd5a807230630f73743ad9d818cc1b9",
            "file": "src/app/pages/homeview/homeview.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-homeview",
            "styleUrls": [
                "./homeview.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./homeview.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-homeview',\n  templateUrl: './homeview.component.html',\n  styleUrls: ['./homeview.component.scss']\n})\nexport class HomeviewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use \"styles/colors\" as c;\r\n\r\nbody {\r\n  background-color: c.$main-background;\r\n}\r\n",
                    "styleUrl": "./homeview.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>homeview works!</p>\n"
        },
        {
            "name": "IssuecollectorComponent",
            "id": "component-IssuecollectorComponent-bc6348284e06540ee3381c105205125bb9542732852ea9a43972999a7806a2bc761b0e0924ea5bfa37740a979f10809c13e4ca1330bd187eaf156837bf88fb5d",
            "file": "src/app/pages/issuecollector/issuecollector.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-issuecollector",
            "styleUrls": [
                "./issuecollector.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./issuecollector.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-issuecollector',\n  templateUrl: './issuecollector.component.html',\n  styleUrls: ['./issuecollector.component.scss']\n})\nexport class IssuecollectorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use \"styles/colors\" as c;\r\n\r\nbody {\r\n  background-color: c.$main-background;\r\n}\r\n",
                    "styleUrl": "./issuecollector.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>issuecollector works!</p>\n"
        },
        {
            "name": "ItemComponent",
            "id": "component-ItemComponent-b82e61bd15995fb766ef652ef3bdc9838e2e73f5a1c82c923871a7b476c72ed87c4ec26d4443a38c1affbfcac08639ce578f6d620194c4b4d7245baa8c6b5cd6",
            "file": "src/app/components/item/item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-item",
            "styleUrls": [
                "./item.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./item.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "flipchart",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-item',\n  templateUrl: './item.component.html',\n  styleUrls: ['./item.component.scss'],\n})\nexport class ItemComponent {\n  @Input()\n  flipchart = true;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use \"styles/colors\" as c;\r\n\r\n.item-box {\r\n  background-color: c.$item-background;\r\n  width: 100%;\r\n  border-radius: 16px;\r\n  padding: 15px;\r\n}\r\n\r\n/*.item-box:active {\r\n  box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2),\r\n    0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12);\r\n}*/\r\n\r\n.item-input-wrapper {\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  padding: 0px 5px;\r\n  margin-bottom: 5%;\r\n}\r\n\r\n.submit-cancel-buttons {\r\n  border: none;\r\n  background-color: transparent;\r\n}\r\n\r\n#item-input {\r\n  resize: none;\r\n  height: auto;\r\n  border: none;\r\n  height: 38px;\r\n  width: 90%;\r\n  margin-left: 5px;\r\n}\r\n\r\n#item-input:focus {\r\n  outline: none;\r\n}\r\n\r\n#submitbtn {\r\n  float: right;\r\n}\r\n\r\n.radio-color-picker {\r\n  display: none;\r\n\r\n  &:checked + .color-picker-lable {\r\n    span {\r\n      transform: scale(1.25);\r\n    }\r\n    @each $name, $value in c.$shift-colors {\r\n      .#{$name} {\r\n        border: 2px solid darken($value, 25%);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n#random {\r\n  display: none;\r\n\r\n  &:checked + label[for=\"random\"] {\r\n    border: 2px solid c.$dark-grey;\r\n    border-radius: 100%;\r\n    span {\r\n      transform: scale(1.25);\r\n    }\r\n  }\r\n}\r\n\r\nlabel[for=\"random\"] {\r\n  display: inline-block;\r\n  width: 25px;\r\n  height: 25px;\r\n  margin-right: 10px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    span {\r\n      transform: scale(1.25);\r\n    }\r\n  }\r\n  span {\r\n    display: block;\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 100%;\r\n    transition: transform 0.2s ease-in-out;\r\n  }\r\n}\r\n\r\n.color-picker-lable {\r\n  display: inline-block;\r\n  width: 25px;\r\n  height: 25px;\r\n  margin-right: 10px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    span {\r\n      transform: scale(1.25);\r\n    }\r\n  }\r\n  span {\r\n    display: block;\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 100%;\r\n    transition: transform 0.2s ease-in-out;\r\n    @each $name, $value in c.$shift-colors {\r\n      &.#{$name} {\r\n        background: $value;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.bottom-wrapper {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 0;\r\n}\r\n\r\n.color-picker-wrapper {\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n}\r\n",
                    "styleUrl": "./item.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"item-box\">\n  <div class=\"item-input-wrapper\">\n    <label for=\"item-input\">11.</label>\n    <input type=\"text\" id=\"item-input\" name=\"item-input\" />\n  </div>\n\n  <button id=\"cancelbtn\" class=\"submit-cancel-buttons\">n</button>\n\n  <button id=\"submitbtn\" class=\"submit-cancel-buttons\">y</button>\n</div>\n"
        },
        {
            "name": "ItemFlipchartComponent",
            "id": "component-ItemFlipchartComponent-834d590e16305bbcc10ae714dac4698ea369682e7bac7bc299203783d8d1bd7bf1abc89c34a510e1e9869d72e82a6844d84b38924b2661fc03a6652dd32859f1",
            "file": "src/app/components/item/item-flipchart/item-flipchart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-item-flipchart",
            "styleUrls": [
                "../item.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./item-flipchart.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "counter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "submitCanceled",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "EventEmitter"
                },
                {
                    "name": "submitItem",
                    "defaultValue": "new EventEmitter<{\n    description: string;\n    color: string;\n  }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "activeColor",
                    "defaultValue": "'shift-blue'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "colorRadio",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLInputElement>",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'shiftBlue'"
                        }
                    ]
                },
                {
                    "name": "itemInput",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLInputElement>",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'textInput'"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "CancelSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "changeColor",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "SubmitItem",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\n\n@Component({\n  selector: 'app-item-flipchart',\n  templateUrl: './item-flipchart.component.html',\n  styleUrls: ['../item.component.scss'],\n})\nexport class ItemFlipchartComponent {\n  activeColor: string = 'shift-blue';\n  @Output() submitCanceled = new EventEmitter();\n  @Output() submitItem = new EventEmitter<{\n    description: string;\n    color: string;\n  }>();\n  @Input() counter: number;\n\n  @ViewChild('textInput') itemInput!: ElementRef<HTMLInputElement>;\n  @ViewChild('shiftBlue') colorRadio!: ElementRef<HTMLInputElement>;\n\n  constructor() {}\n\n  changeColor(e: Event) {\n    this.activeColor = (e.currentTarget as HTMLInputElement).id;\n  }\n\n  SubmitItem() {\n    if (this.itemInput.nativeElement.value != '') {\n      this.submitItem.emit({\n        description: this.itemInput.nativeElement.value,\n        color: this.activeColor,\n      });\n    }\n  }\n\n  CancelSubmit() {\n    this.itemInput.nativeElement.value = '';\n    this.colorRadio.nativeElement.checked = true;\n    this.submitCanceled.emit();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use \"styles/colors\" as c;\r\n\r\n.item-box {\r\n  background-color: c.$item-background;\r\n  width: 100%;\r\n  border-radius: 16px;\r\n  padding: 15px;\r\n}\r\n\r\n/*.item-box:active {\r\n  box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2),\r\n    0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12);\r\n}*/\r\n\r\n.item-input-wrapper {\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  padding: 0px 5px;\r\n  margin-bottom: 5%;\r\n}\r\n\r\n.submit-cancel-buttons {\r\n  border: none;\r\n  background-color: transparent;\r\n}\r\n\r\n#item-input {\r\n  resize: none;\r\n  height: auto;\r\n  border: none;\r\n  height: 38px;\r\n  width: 90%;\r\n  margin-left: 5px;\r\n}\r\n\r\n#item-input:focus {\r\n  outline: none;\r\n}\r\n\r\n#submitbtn {\r\n  float: right;\r\n}\r\n\r\n.radio-color-picker {\r\n  display: none;\r\n\r\n  &:checked + .color-picker-lable {\r\n    span {\r\n      transform: scale(1.25);\r\n    }\r\n    @each $name, $value in c.$shift-colors {\r\n      .#{$name} {\r\n        border: 2px solid darken($value, 25%);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n#random {\r\n  display: none;\r\n\r\n  &:checked + label[for=\"random\"] {\r\n    border: 2px solid c.$dark-grey;\r\n    border-radius: 100%;\r\n    span {\r\n      transform: scale(1.25);\r\n    }\r\n  }\r\n}\r\n\r\nlabel[for=\"random\"] {\r\n  display: inline-block;\r\n  width: 25px;\r\n  height: 25px;\r\n  margin-right: 10px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    span {\r\n      transform: scale(1.25);\r\n    }\r\n  }\r\n  span {\r\n    display: block;\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 100%;\r\n    transition: transform 0.2s ease-in-out;\r\n  }\r\n}\r\n\r\n.color-picker-lable {\r\n  display: inline-block;\r\n  width: 25px;\r\n  height: 25px;\r\n  margin-right: 10px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    span {\r\n      transform: scale(1.25);\r\n    }\r\n  }\r\n  span {\r\n    display: block;\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 100%;\r\n    transition: transform 0.2s ease-in-out;\r\n    @each $name, $value in c.$shift-colors {\r\n      &.#{$name} {\r\n        background: $value;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.bottom-wrapper {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 0;\r\n}\r\n\r\n.color-picker-wrapper {\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n}\r\n",
                    "styleUrl": "../item.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 26
            },
            "templateData": "<div class=\"item-box\">\n  <div class=\"item-input-wrapper\">\n    <label for=\"item-input\">{{ counter }}.</label>\n    <input type=\"text\" id=\"item-input\" name=\"item-input\" #textInput />\n  </div>\n\n  <div class=\"bottom-wrapper\">\n    <button\n      id=\"cancelbtn\"\n      class=\"submit-cancel-buttons\"\n      (click)=\"CancelSubmit()\"\n    >\n      n\n    </button>\n\n    <div class=\"color-picker-wrapper\">\n      <input\n        type=\"radio\"\n        name=\"color\"\n        id=\"shift-blue\"\n        class=\"radio-color-picker\"\n        #shiftBlue\n        checked\n        (change)=\"changeColor($event)\"\n      />\n      <label for=\"shift-blue\" class=\"color-picker-lable\"\n        ><span class=\"shift-blue\"></span\n      ></label>\n\n      <input\n        type=\"radio\"\n        name=\"color\"\n        id=\"shift-turquoise\"\n        class=\"radio-color-picker\"\n        (change)=\"changeColor($event)\"\n      />\n      <label for=\"shift-turquoise\" class=\"color-picker-lable\"\n        ><span class=\"shift-turquoise\"></span\n      ></label>\n\n      <input\n        type=\"radio\"\n        name=\"color\"\n        id=\"shift-orange\"\n        class=\"radio-color-picker\"\n        (change)=\"changeColor($event)\"\n      />\n      <label for=\"shift-orange\" class=\"color-picker-lable\"\n        ><span class=\"shift-orange\"></span\n      ></label>\n\n      <input\n        type=\"radio\"\n        name=\"color\"\n        id=\"shift-yellow\"\n        class=\"radio-color-picker\"\n        (change)=\"changeColor($event)\"\n      />\n      <label for=\"shift-yellow\" class=\"color-picker-lable\"\n        ><span class=\"shift-yellow\"></span\n      ></label>\n\n      <!--<input type=\"radio\" id=\"random\" name=\"color\" />\n      <label for=\"random\"><span class=\"random\"></span>z</label>-->\n    </div>\n\n    <button id=\"submitbtn\" class=\"submit-cancel-buttons\" (click)=\"SubmitItem()\">\n      y\n    </button>\n  </div>\n</div>\n"
        },
        {
            "name": "ItemMenuComponent",
            "id": "component-ItemMenuComponent-c8dee2a3fe4a05f7031616f0cf255eff532f8080e067df937a0a2f11d235b6af8da587804c37df268850a7ae70bdf85c54787475c98e0c822ac58715c8142c2f",
            "file": "src/app/components/item-menu/item-menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-item-menu",
            "styleUrls": [
                "./item-menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./item-menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-item-menu',\n  templateUrl: './item-menu.component.html',\n  styleUrls: ['./item-menu.component.scss']\n})\nexport class ItemMenuComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use \"styles/colors\" as c;\r\n\r\n.menu-wrapper {\r\n  background-color: c.$dark-grey;\r\n  color: white;\r\n  width: 238px;\r\n  height: 302px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-radius: 10px;\r\n  justify-content: space-around;\r\n}\r\n\r\n.icons {\r\n  width: 27px;\r\n  height: 32px;\r\n  margin-right: 15px;\r\n  margin-left: 5%;\r\n}\r\n\r\n.row-wrapper {\r\n  display: flex;\r\n  flex-direction: row;\r\n  font-size: 15px;\r\n  font-weight: 500px;\r\n  line-height: 22px;\r\n  align-items: center;\r\n  cursor: pointer;\r\n}\r\n\r\np {\r\n  margin: 0;\r\n}\r\n\r\nhr {\r\n  margin: 3px;\r\n  width: 90%;\r\n  align-self: center;\r\n}\r\n",
                    "styleUrl": "./item-menu.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"menu-wrapper\">\n  <div>\n    <button>c</button><button>c</button><button>c</button><button>c</button>\n  </div>\n  <hr />\n  <div class=\"row-wrapper\">\n    <img class=\"icons\" src=\"assets/icons/bookmark-solid.svg\" />\n    <p>Als Bookmark <br />markieren</p>\n  </div>\n  <hr />\n  <div class=\"row-wrapper\">\n    <img class=\"icons\" src=\"assets/icons/bookmark-solid.svg\" />\n    <p>Als Bookmark <br />markieren</p>\n  </div>\n  <hr />\n  <div class=\"row-wrapper\">\n    <img class=\"icons\" src=\"assets/icons/bookmark-solid.svg\" />\n    <p>Bearbeiten</p>\n  </div>\n  <hr />\n  <div class=\"row-wrapper\">\n    <img class=\"icons\" src=\"assets/icons/bookmark-solid.svg\" />\n    <p>Übertragen</p>\n  </div>\n  <hr />\n  <div class=\"row-wrapper\">\n    <img class=\"icons\" src=\"assets/icons/bookmark-solid.svg\" />\n    <p>Löschen</p>\n  </div>\n</div>\n"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-c1cda990da0339470391a12fbea3106a75163ff51376e4cfc52c372d58808c4279892d89f4765bbee93eb5a5e1289245ee51ec2e2e6f2896488730cb336b83ac",
            "file": "src/app/pages/login/login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login",
            "styleUrls": [
                "./login.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [
                        {
                            "name": "signInForm",
                            "type": "NgForm",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "signInForm",
                            "type": "NgForm",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { SignInData } from 'app/components/signInData';\nimport { AuthenticationService } from 'app/service/authentication/authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  constructor(private authenticationService: AuthenticationService) {}\n\n  ngOnInit(): void {}\n\n  onSubmit(signInForm: NgForm) {\n    const signInData = new SignInData(\n      signInForm.value.username,\n      signInForm.value.password\n    );\n    this.authenticationService.Authenticate(signInData);\n    console.log(this.authenticationService.isAuthenticated);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use \"styles/colors\" as c;\r\n\r\n.login-wrapper {\r\n  margin-top: 10rem;\r\n  margin-left: 5em;\r\n  width: 20rem;\r\n}\r\n\r\n.submitButton {\r\n  background-color: c.$turquoise;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 6px;\r\n  width: 221px;\r\n  height: 44px;\r\n}\r\n\r\n.form-control {\r\n  margin-bottom: 2rem;\r\n}\r\n\r\nbody {\r\n  background-color: c.$main-background;\r\n}\r\n",
                    "styleUrl": "./login.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authenticationService",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "authenticationService",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"login-wrapper\">\n  <div class=\"card-body\">\n    <form (ngSubmit)=\"onSubmit(signInForm)\" #signInForm=\"ngForm\">\n      <div class=\"form-floating\">\n        <input\n          type=\"text\"\n          name=\"username\"\n          class=\"form-control\"\n          id=\"floatingInput\"\n          placeholder=\"Benutzername\"\n          required\n          ngModel\n        />\n        <label for=\"floatingInput\">Benutzername</label>\n      </div>\n      <div class=\"form-floating\">\n        <input\n          type=\"password\"\n          name=\"password\"\n          class=\"form-control\"\n          id=\"floatingPassword\"\n          placeholder=\"Password\"\n          required\n          ngModel\n        />\n        <label for=\"floatingPassword\">Password</label>\n      </div>\n      <button class=\"submitButton\" type=\"submit\">Anmelden</button>\n    </form>\n  </div>\n</div>\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-7126d8c2607c946741c651482413b43feb72b2d63cac9d3ac173fde206a5e635eb4cdbf7ca7ac9327c7d4d05cf7ef619144c34c11609ad677081d0ee4e855064",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 64
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nsection h2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nsection p {\n  margin: 1em 0;\n}\n\nsection a {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nsection ul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nsection li {\n  margin-bottom: 8px;\n}\n\nsection .tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\nsection .tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\nsection .tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\nsection .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-fb099e86370670e9ae6ce3d726de96390096363224a2a5fef08f42a98bfea96b2391f5e521b0e5e2a320183037b1a130237e8645b574ff7442bf174437bb78b9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app-routing.module';\nimport { LoginComponent } from './pages/login/login.component';\nimport { FormsModule } from '@angular/forms';\nimport { ComponentsModule } from './components/components.module';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { CommonModule } from '@angular/common';\nimport { StoreModule } from '@ngrx/store';\nimport { CounterService } from './state/counter/counter.service';\n\n@NgModule({\n  declarations: [AppComponent, LoginComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    CommonModule,\n    AppRoutingModule,\n    FormsModule,\n    ComponentsModule,\n    DragDropModule,\n  ],\n  providers: [CounterService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "CounterService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "LoginComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-f7e6dfc7568144a437fbb1d5cd5b68d9b1138e05c557c228deec58e194899815566954e7c97edb25d6cc641bcadecf63aa05d995dbe2b10de6be986b32c04d42",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './pages/login/login.component';\n\nconst routes: Routes = [\n  { path: '', component: LoginComponent },\n  {\n    path: 'home',\n    loadChildren: () =>\n      \"import('./pages/homeview').then((m) => m.HomeviewModule)\",\n  },\n  {\n    path: 'flipcharts',\n    loadChildren: () =>\n      \"import('./pages/flipcharts').then((m) => m.FlipchartsModule)\",\n  },\n  {\n    path: 'issuecollector',\n    loadChildren: () =>\n      \"import('./pages/issuecollector').then((m) => m.IssuecollectorModule)\",\n  },\n  { path: '', redirectTo: '', pathMatch: 'full' },\n  { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ChartModule",
            "id": "module-ChartModule-18ed87053763283bd24e35cc62a752e6a73af18ed60225be87607bd034437b664b9230171daf9133abd0fdf18df2536bc56cac03cd1facce83cf83e30b83741f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/chart/chart.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ComponentsModule } from 'app/components/components.module';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, ComponentsModule, DragDropModule],\n})\nexport class ChartModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ComponentsModule",
            "id": "module-ComponentsModule-9e8f68584baf56b39b1c1b83c575945fc8414d12c6c56ce82f6f53b3dc9ea3d46544830aee4d1488765e9e8a2fd626f10e903395f44decec9e7af9a33c32fd63",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/components.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HeaderComponent } from './header';\nimport { ItemComponent } from './item/item.component';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { AddButtonComponent } from './add-button/add-button.component';\nimport { ItemFlipchartComponent } from './item/item-flipchart/item-flipchart.component';\nimport { AddedItemComponent } from './added-item/added-item.component';\nimport { ChartComponent } from './chart/chart.component';\nimport { ItemMenuComponent } from './item-menu/item-menu.component';\n\n@NgModule({\n  declarations: [\n    ItemComponent,\n    HeaderComponent,\n    AddButtonComponent,\n    ItemFlipchartComponent,\n    AddedItemComponent,\n    ChartComponent,\n    ItemMenuComponent,\n  ],\n  imports: [CommonModule, DragDropModule],\n  exports: [\n    ItemComponent,\n    HeaderComponent,\n    AddButtonComponent,\n    AddedItemComponent,\n    ItemFlipchartComponent,\n    ChartComponent,\n  ],\n})\nexport class ComponentsModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AddButtonComponent"
                        },
                        {
                            "name": "AddedItemComponent"
                        },
                        {
                            "name": "ChartComponent"
                        },
                        {
                            "name": "HeaderComponent"
                        },
                        {
                            "name": "ItemComponent"
                        },
                        {
                            "name": "ItemFlipchartComponent"
                        },
                        {
                            "name": "ItemMenuComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AddButtonComponent"
                        },
                        {
                            "name": "AddedItemComponent"
                        },
                        {
                            "name": "ChartComponent"
                        },
                        {
                            "name": "HeaderComponent"
                        },
                        {
                            "name": "ItemComponent"
                        },
                        {
                            "name": "ItemFlipchartComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FlipchartsModule",
            "id": "module-FlipchartsModule-a00b693bee224f0c44930e1a7109d5c475acdeaacf7a33669fbf518e03f77cfd9a79fb145c3c2519f221753288440695bfd4f686526a553744820ae9fa32c69b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/flipcharts/flipcharts.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlipchartsComponent } from './flipcharts.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ComponentsModule } from 'app/components/components.module';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\n\nconst routes: Routes = [{ path: '', component: FlipchartsComponent }];\n\n@NgModule({\n  declarations: [FlipchartsComponent],\n  imports: [\n    CommonModule,\n    ComponentsModule,\n    RouterModule.forChild(routes),\n    DragDropModule,\n  ],\n})\nexport class FlipchartsModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FlipchartsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HomeviewModule",
            "id": "module-HomeviewModule-d7de0f4c364ed2e9eabaa50ef6faf5d508791c39ab498efcc300d6b12726340a30ef5273306512a117ebe3ad4d5f6dc1511726e374b9ff85f66bbc4904631969",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/homeview/homeview.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HomeviewComponent } from './homeview.component';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [{ path: '', component: HomeviewComponent }];\n\n@NgModule({\n  declarations: [HomeviewComponent],\n  imports: [CommonModule, RouterModule.forChild(routes)],\n})\nexport class HomeviewModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "HomeviewComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "IssuecollectorModule",
            "id": "module-IssuecollectorModule-5ff0fdc0ee22363047ac509b5e77984a8af37a83c598234bc1b911aa6b34d9f48fee99ed8f6e7c1022a304eb9c6a5d868ba25dcf8d91acfc299f13f1fadc5074",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/issuecollector/issuecollector.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IssuecollectorComponent } from './issuecollector.component';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [{ path: '', component: IssuecollectorComponent }];\n\n@NgModule({\n  declarations: [IssuecollectorComponent],\n  imports: [CommonModule, RouterModule.forChild(routes)],\n})\nexport class IssuecollectorModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "IssuecollectorComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/added-item/added-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/chart/chart.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/item/item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/item-menu/item-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/item/item-flipchart/item-flipchart.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "Flipchart",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/add-button/add-Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Issues",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/add-button/add-Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "metadata",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/add-button/add-Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "moduleMetadata({\r\n  imports: [],\r\n})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/add-button/add-Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<AddButtonComponent>",
                "defaultValue": "(args: AddButtonComponent) => ({\r\n  props: args,\r\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [
            {
                "name": "chartCaption",
                "childs": [
                    {
                        "name": "p",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "i",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "b",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "l",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/types/Item.ts"
            }
        ],
        "groupedVariables": {
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/app/components/added-item/added-item.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/added-item/added-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({})"
                }
            ],
            "src/app/components/chart/chart.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/chart/chart.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({})"
                }
            ],
            "src/app/components/item/item.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/item/item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({})"
                }
            ],
            "src/app/components/item-menu/item-menu.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/item-menu/item-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({})"
                }
            ],
            "src/app/components/item/item-flipchart/item-flipchart.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/item/item-flipchart/item-flipchart.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({})"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/app/components/add-button/add-Button.stories.ts": [
                {
                    "name": "Flipchart",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/add-button/add-Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Issues",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/add-button/add-Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "metadata",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/add-button/add-Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "moduleMetadata({\r\n  imports: [],\r\n})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/add-button/add-Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<AddButtonComponent>",
                    "defaultValue": "(args: AddButtonComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  props: args,\n})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {
            "src/types/Item.ts": [
                {
                    "name": "chartCaption",
                    "childs": [
                        {
                            "name": "p",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "i",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "b",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "l",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/types/Item.ts"
                }
            ]
        },
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "component": "LoginComponent"
                    },
                    {
                        "path": "home",
                        "loadChildren": "./pages/homeview#HomeviewModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/pages/homeview/homeview.module.ts",
                                        "module": "HomeviewModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "HomeviewComponent"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "HomeviewModule"
                            }
                        ]
                    },
                    {
                        "path": "flipcharts",
                        "loadChildren": "./pages/flipcharts#FlipchartsModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [],
                                "module": "FlipchartsModule"
                            }
                        ]
                    },
                    {
                        "path": "issuecollector",
                        "loadChildren": "./pages/issuecollector#IssuecollectorModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/pages/issuecollector/issuecollector.module.ts",
                                        "module": "IssuecollectorModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "IssuecollectorComponent"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "IssuecollectorModule"
                            }
                        ]
                    },
                    {
                        "path": "",
                        "redirectTo": "",
                        "pathMatch": "full"
                    },
                    {
                        "path": "**",
                        "redirectTo": ""
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/components/add-button/add-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Flipchart",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/add-button/add-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Issues",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/add-button/add-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "metadata",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/add-button/add-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/add-button/add-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AddButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/added-item/added-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AddedItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/components/added-item/added-item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/chart/chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/components/chart/chart.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/item-menu/item-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ItemMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/item-menu/item-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/item/item-flipchart/item-flipchart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ItemFlipchartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/components/item/item-flipchart/item-flipchart.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/item/item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/item/item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/signInData.ts",
                "type": "class",
                "linktype": "classe",
                "name": "SignInData",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/flipcharts/flipcharts.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FlipchartsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/homeview/homeview.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeviewComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/issuecollector/issuecollector.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IssuecollectorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/service/authentication/authentication.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthenticationService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/state/Items/item.reducer.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ItemState",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/state/counter/counter.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CounterService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/types/Item.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Item",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            }
        ]
    }
}